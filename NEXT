Do last test locally and tag major release as "latest".

====================================

README

Add a line linking to Documentation: [godoc](https://pkg.go.dev/github.com/vitali-fedulov/images/v2).

Put a large message in README of /images redirecting to the new major version /images3.

=====================================

Rewrite similar.pictures explanation on icons etc. -> referenced in last lines of README.


***************************************************************************************
***************************************************************************************
***************************************************************************************



Add functions for identical files?
E.g. similarity by file size, pixel by pixel, and fast checksum.

============================================

Maybe add a jpeg thumbnail reader for fast scans like in www version.

===============================================

Possible optimization (maybe not that important for speed):

Decode Jpeg directly to YCbCr with function
func (p *YCbCr) YCbCrAt(x, y int) color.YCbCr
where type YCbCr struct {
	Y, Cb, Cr uint8        <<< Look, no alpha at all. But some Jpegs return Gray
                           <<< or even CMYK:
                           https://cs.opensource.google/go/go/+/refs/tags/go1.17.3:src/image/jpeg/reader.go;l=774
                           
                           BUT maybe just use to RGB first, to all non YCbCr to simplify.
}
https://pkg.go.dev/image#YCbCr.YCbCrAt
with preliminary filtering:
if img.ColorModel() == color.YCbCrModel {
    color.YCbCr = img.YCbCrAt(x, y int)
} else 
    ....
}

VERIFY that majority of images are actually 
img.ColorModel() == color.YCbCrModel

func DecodeConfig(r io.Reader) (image.Config, error)
DecodeConfig returns the color model and dimensions of a PNG image without decoding the entire image.

